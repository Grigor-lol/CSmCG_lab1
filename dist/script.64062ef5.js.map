{"version":3,"sources":["java-script/script.js"],"names":["gl","canvas","document","createElement","id","body","getElementsByTagName","start","getElementById","initWebGL","viewport","width","height","clearColor","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","alert","names","ii","length","getContext","e","appendChild"],"mappings":";AAAA,IAAIA,EACAC,EAASC,SAASC,cAAc,UACpCF,EAAOG,GAAK,WACZ,IAAIC,EAAOH,SAASI,qBAAqB,QAAQ,GAIjD,SAASC,IACL,IAAIN,EAASC,SAASM,eAAe,aACrCR,EAAKS,EAAUR,KAMXD,EAAGU,SAAS,EAAG,EAAGV,EAAGC,OAAOU,MAAOX,EAAGC,OAAOW,QAE7CZ,EAAGa,WAAW,EAAK,EAAK,EAAK,GAE7Bb,EAAGc,OAAOd,EAAGe,YAEbf,EAAGgB,UAAUhB,EAAGiB,QAEhBjB,EAAGkB,MAAMlB,EAAGmB,iBAAiBnB,EAAGoB,mBAZhCC,MAAM,2EAed,SAASZ,EAAUR,GACfD,EAAK,KACL,IAAIsB,EAAQ,CAAC,SAAU,QAAS,qBAAsB,YAAa,aACnEtB,EAAK,KACL,IAAK,IAAIuB,EAAK,EAAGA,EAAKD,EAAME,SAAUD,EAAI,CACtC,IACIvB,EAAKC,EAAOwB,WAAWH,EAAMC,IAC/B,MAAMG,IACR,GAAI1B,EACA,MAGR,OAAOA,EAlCXK,EAAKsB,YAAY1B,GACjBM","file":"script.64062ef5.js","sourceRoot":"..","sourcesContent":["var gl;\r\nvar canvas = document.createElement('canvas');\r\ncanvas.id = \"glcanvas\";\r\nvar body = document.getElementsByTagName(\"body\")[0];\r\nbody.appendChild(canvas);\r\nstart();\r\n\r\nfunction start() {\r\n    var canvas = document.getElementById(\"glcanvas\");\r\n    gl = initWebGL(canvas);\r\n    if (!gl) {\r\n        alert('Unable to initialize WebGL. Your browser or machine may not support it.');\r\n        return;\r\n    }// продолжать только если WebGL доступен и работает\r\n// Устанавливаем размер вьюпорта\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n// установить в качестве цвета очистки буфера цвета черный, полная непрозрачность\r\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n// включает использование буфера глубины\r\n        gl.enable(gl.DEPTH_TEST);\r\n// определяет работу буфера глубины: более ближние объекты перекрывают дальние\r\n        gl.depthFunc(gl.LEQUAL);\r\n// очистить буфер цвета и буфер глубины\r\n        gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\nfunction initWebGL(canvas) {\r\n    gl = null;\r\n    var names = [\"webgl2\", \"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\r\n    gl = null;\r\n    for (var ii = 0; ii < names.length; ++ii) {\r\n        try {\r\n            gl = canvas.getContext(names[ii]);\r\n        } catch(e) {}\r\n        if (gl) {\r\n            break;\r\n        }\r\n    }\r\n    return gl;\r\n}\r\n"]}